server {
  # location of SPIRE socket
  # here, set to default SPIRE socket path
  spire_socket_path = "unix:///tmp/spire-server/private/api.sock"

  ### BEGIN SERVER CONNECTION CONFIGURATION ###
  # Note: at least one of http, tls, and mtls must be configured
  # The server can open multiple if multiple sections included
  # The server only ends when all connections error

  # [required] configure HTTP connection to Tornjak server
  http {
    port = 10000 # container port for HTTP connection
  }

  # [optional, recommended] configure HTTPS connection to Tornjak server
  https {
    port = 10443                  # [required for HTTPS] container port for HTTPS connection
    cert = "sample-keys/tls.pem"  # [required for HTTPS] TLS cert
    key = "sample-keys/key.pem"   # [required for HTTPS] TLS key
    client_ca = "sample-keys/rootCA.pem" # enables mTLS connection for HTTPS port
  }

  ### END SERVER CONNECTION CONFIGURATION ###
}

plugins {

  ### BEGIN DATASTORE PLUGIN CONFIGURATION ###

  # Configure SQL local database for Tornjak
  DataStore "sql" {
    plugin_data {
      drivername = "sqlite3"
      filename = "/run/spire/data/tornjak.sqlite3" # location of database
    }
  }

  ### END DATASTORE PLUGIN CONFIGURATION

  ### BEGIN IAM PLUGIN CONFIGURATION ###
  # Note: if no UserManagement configuration included, authentication treated as noop

  # Configure Keycloak as external Authentication server
  UserManagement "KeycloakAuth" {
    plugin_data {
      # issuer - Issuer URL for OIDC
      # here is a sample for Keycloak running locally on Minikube
      issuer = "http://host.docker.internal:8080/realms/tornjak"
      # for cloud deployment it would be something like:
      # issuer = "http://<ingress_access>/realms/tornjak"

      # audience - expected value for aud claim in JWT
      # if not included or set, there will be no audience check
      # recommended to ensure JWT was meant for Tornjak Backend resource server
      audience = "tornjak-backend"
    }
  }

  ### END IAM PLUGIN CONFIGURATION


}
