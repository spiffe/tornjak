## Build stage
FROM node:18-alpine3.14 AS build
WORKDIR /usr/src/app
COPY tornjak-frontend .
RUN npm install && \
    npm run build

## Runtime stage
FROM node:18-alpine3.14 AS runtime
WORKDIR /usr/src/app
COPY --from=build /usr/src/app/build ./build
COPY --from=build /usr/src/app/.env.prod .

# Install serve package and react-inject-env
RUN npm install -g npm@9.7.1 && \
    npm install --location=global serve && \
    npm install react-inject-env
    
# Set dynamic port, defualt 3000
ENV PORT_FE=3000
EXPOSE $PORT_FE

# moving env.js to fix "access denied" error when running in restricted (read-only) env
ENTRYPOINT npx react-inject-env set -n tmp/env.js && serve -s build -p $PORT_FE

# add a version link to the image description
ARG version
ARG github_sha
LABEL org.opencontainers.image.description="Tornjak frontend ($version) Alpine based image: https://github.com/spiffe/tornjak/releases/tag/$version" \
      org.opencontainers.image.source="https://github.com/spiffe/tornjak" \
      org.opencontainers.image.documentation="https://github.com/spiffe/tornjak/tree/main/docs"
# additional labels
LABEL architecture="amd64" \
      build-date="" \
      description="Tornjak Frontend" \ 
      io.k8s.description="Tornjak Frontend" \
      io.k8s.display-name="tornjak-frontend" \
      maintainer="" \
      name="spiffe/tornjak-frontend" \
      release="$version" \
      summary="Tornjak frontend image" \
      url="" \
      vcs-ref="" \
      vcs-type="" \
      vendor="" \
      version="$version" 
# create env. variables with the build details
ENV VERSION=$version
ENV GITHUB_SHA=$github_sha
