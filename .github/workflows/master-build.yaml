name: Tornjak Artifact push
on:
  push:
    branches:
    - main
jobs:
  tornjak-build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install Golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.17'
      - uses: actions/setup-node@v2
        with:
          node-version: '15'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.29
          args: --timeout 5m
      - name: Log in to GHCR.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Create sha tagged image for container-agent
      
      # Deprecating the backend+spire image for now
      # - name: Set backend-spire image name
      #   run: echo "CONTAINER_BACKEND_WITH_SPIRE_TAG=ghcr.io/${{ github.repository_owner }}/tornjak-be-spire-server:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Set backend image name
        run: echo "CONTAINER_BACKEND_TAG=ghcr.io/${{ github.repository_owner }}/tornjak-be:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Set frontend image name
        run: echo "CONTAINER_FRONTEND_TAG=ghcr.io/${{ github.repository_owner }}/tornjak-fe:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Set Tornjak image name
        run: echo "CONTAINER_TAG=ghcr.io/${{ github.repository_owner }}/tornjak:$GITHUB_SHA" >> $GITHUB_ENV
      - name: Set manager image name
        run: echo "CONTAINER_MANAGER_TAG=ghcr.io/${{ github.repository_owner }}/tornjak-manager:$GITHUB_SHA" >> $GITHUB_ENV

      # create images
      # - name: Build and push tornjak backend image
      #   run: make container-tornjak-be-spire-push
      # Create tagged versioned images
      # - name: Push artifacts for tornjak-be-spire-multiversions
      #   run: make release-tornjak-be-spire-multiversions-ghcr
      - name: Build and push tornjak backend image
        run: make release-tornjak-be-ghcr
      - name: Build and push tornjak frontend image
        run: make release-tornjak-fe-ghcr
      - name: Build and push tornjak image
        run: make release-tornjak-ghcr
      - name: Build and push tornjak manager image
        run: make release-tornjak-manager-ghcr
      - run: echo "🍏 This job's status is ${{ job.status }}."
