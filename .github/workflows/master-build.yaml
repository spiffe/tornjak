name: Tornjak Artifact push
on:
  push:
    branches:
    - main
    - v1.4
jobs:
  tornjak-build:
    runs-on: ubuntu-latest
    steps:
      - name: Show trigger info
        run: |
          cat <<EOF >>"${GITHUB_STEP_SUMMARY}"
          # Workflow job info

          - üéâ The job was automatically triggered by a ${{ github.event_name }} event.
          - üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!
          - üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.
          EOF

      - name: Check out repository code
        uses: actions/checkout@v3.6.0

      - name: Install Golang
        uses: actions/setup-go@v4.1.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Download modules
        run: go mod download

      - uses: actions/setup-node@v3.8.0
        with:
          node-version: '18'

      - name: Download modules
        run: go mod download

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: v1.53
          args: --timeout 7m

      - name: Log in to GHCR.io
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
     
      # set repo and GITHUB SHA 
      - name: Set github commit id
        run: echo "GITHUB_SHA=$GITHUB_SHA" >> $GITHUB_ENV
        
      - name: Set release repo
        run: echo "REPO=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV

      # build and push images tagged with GITHUB_SHA, version, and latest
      - name: Build and push tornjak backend image
        run: make release-tornjak-backend

      - name: Build and push tornjak frontend image
        run: make release-tornjak-frontend

      - name: Build and push tornjak image (frontend+backend)
        run: make release-tornjak

      - name: Build and push tornjak manager image
        run: make release-tornjak-manager

      - name: Print job result
        run: |
          cat <<EOF >>"${GITHUB_STEP_SUMMARY}"
          - üçè This job's status is ${{ job.status }}.
          EOF
